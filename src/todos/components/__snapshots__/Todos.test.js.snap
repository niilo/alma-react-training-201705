exports[`test matches snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="form-group">
    <InputBar
        onSubmit={[Function]} />
    <ul
        className="list-group">
        <Todo
            onRemoveTodo={[Function]}
            onToggleTodo={[Function]}
            todo={
                Object {
                    "done": true,
                    "id": "1",
                    "name": "Go to gym",
                  }
            } />
        <Todo
            onRemoveTodo={[Function]}
            onToggleTodo={[Function]}
            todo={
                Object {
                    "done": false,
                    "id": "2",
                    "name": "Learn some jest",
                  }
            } />
    </ul>
</div>,
  "nodes": Array [
    <div
      className="form-group">
      <InputBar
            onSubmit={[Function]} />
      <ul
            className="list-group">
            <Todo
                  onRemoveTodo={[Function]}
                  onToggleTodo={[Function]}
                  todo={
                        Object {
                              "done": true,
                              "id": "1",
                              "name": "Go to gym",
                            }
                  } />
            <Todo
                  onRemoveTodo={[Function]}
                  onToggleTodo={[Function]}
                  todo={
                        Object {
                              "done": false,
                              "id": "2",
                              "name": "Learn some jest",
                            }
                  } />
      </ul>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Todos
        todos={
                Array [
                        Object {
                          "done": true,
                          "id": "1",
                          "name": "Go to gym",
                        },
                        Object {
                          "done": false,
                          "id": "2",
                          "name": "Learn some jest",
                        },
                      ]
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Todos {
        "_reactInternalInstance": [Circular],
        "addTodo": [Function],
        "context": Object {},
        "fetchTodos": [Function],
        "props": Object {
          "todos": Array [
            Object {
              "done": true,
              "id": "1",
              "name": "Go to gym",
            },
            Object {
              "done": false,
              "id": "2",
              "name": "Learn some jest",
            },
          ],
        },
        "refs": Object {},
        "removeTodo": [Function],
        "state": null,
        "toggleTodo": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="form-group">
          <InputBar
                    onSubmit={[Function]} />
          <ul
                    className="list-group">
                    <Todo
                              onRemoveTodo={[Function]}
                              onToggleTodo={[Function]}
                              todo={
                                        Object {
                                                  "done": true,
                                                  "id": "1",
                                                  "name": "Go to gym",
                                                }
                              } />
                    <Todo
                              onRemoveTodo={[Function]}
                              onToggleTodo={[Function]}
                              todo={
                                        Object {
                                                  "done": false,
                                                  "id": "2",
                                                  "name": "Learn some jest",
                                                }
                              } />
          </ul>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="form-group">
          <InputBar
                    onSubmit={[Function]} />
          <ul
                    className="list-group">
                    <Todo
                              onRemoveTodo={[Function]}
                              onToggleTodo={[Function]}
                              todo={
                                        Object {
                                                  "done": true,
                                                  "id": "1",
                                                  "name": "Go to gym",
                                                }
                              } />
                    <Todo
                              onRemoveTodo={[Function]}
                              onToggleTodo={[Function]}
                              todo={
                                        Object {
                                                  "done": false,
                                                  "id": "2",
                                                  "name": "Learn some jest",
                                                }
                              } />
          </ul>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Todos
    todos={
        Array [
            Object {
              "done": true,
              "id": "1",
              "name": "Go to gym",
            },
            Object {
              "done": false,
              "id": "2",
              "name": "Learn some jest",
            },
          ]
    } />,
}
`;
